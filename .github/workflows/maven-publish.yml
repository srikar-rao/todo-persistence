name: Maven Build and Versioning

on:
  push:
    branches:
      - master
    tags:
      - 'v*'   # Detect version tags like v1.0.0
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: temurin

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      # Determine if this is a release or snapshot build
      - name: Determine version
        id: determine_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            # This is a release tag, extract version from tag
            VERSION="${GITHUB_REF#refs/tags/v}"
            echo "::set-output name=VERSION::$VERSION"
          else
            # This is a merge to the main branch, create a SNAPSHOT version
            VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')
            echo "::set-output name=VERSION::$VERSION-SNAPSHOT"
          fi

      # Update the POM version with the determined version
      - name: Set Maven version
        run: mvn versions:set -DnewVersion=${{ steps.determine_version.outputs.VERSION }}

      - name: Build and package using Maven
        run: mvn -B package --file pom.xml

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: target/*.jar
